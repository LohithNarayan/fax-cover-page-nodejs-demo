.chapter(data-title='RingCentral OAuth demo in Node.js')
  .step(data-title='Set up the project', data-file='README.md', data-highlight='24-26')
    :markdown
      * Clone the demo repo with git.
      * Install dependencies with NPM

      *To install NPM, please install [Node.js](https://nodejs.org/)*

  .step(data-title='Configure the app appropriately', data-file='.env.sample')
    :markdown
      ## Configuration

      Edit the `.env` file to configure your client ID, client secret and redirect URL, etc.
      
      ```
      $ cp .env.sample .env
      $ vi .env
      ```
      
      Please visit [Developer Portal](http://developer.ringcentral.com/) to apply client ID and secret. And ensure the redirect URI in your config file has been entered in your app settings. By default, the URL is set to the following for this demo:
      
      ```
      http://localhost:8080/callback
      ```

  .step(data-title='Create RingCentral SDK instance', data-file='index.js', data-highlight='9-13')
    p In the node.js entry file, create RingCentral SDK instance with parameters from the configuration file.

   .step(data-title='Create fax data holder', data-file='index.js', data-highlight='3,20')
    :markdown
      RingCentral platform accepts fax data in the form of `multipart/form-data`. In node.js, we use a module `form-data` to create `multipart/form-data` conveniently. This is our fax data holder.

  .step(data-title='Set fax meta data', data-file='index.js', data-highlight='22-28')
    :markdown
      Fax meta data is a json object where we can specify receivers, fax resolution and other properties of fax. After creating the meta data, append it to the `formData`.

  .step(data-title='Append a custom cover page from HTML', data-file='index.js', data-highlight='30-44')
    :markdown
      RingCentral custom fax cover page can be rendered from HTML. Create an HTML page by `Handlebars` template engine. Append the HTML to the `formData` and set the `contentType` as `text/html`.

  .step(data-title='Append a custom cover page from PDF', data-file='index.js', data-highlight='46-47')
    :markdown
      RingCentral custom fax cover page can be also rendered from PDF and multiple custom cover pages are accepted. Read the PDF file with node.js file stream and append it to the `formData` and set the `contentType` as `application/pdf`. Now the fax data is ready.

  .step(data-title='Log into RingCentral', data-file='index.js', data-highlight='49-54')
    :markdown
      Log into RingCentral with password authentication flow.

  .step(data-title='Send the fax', data-file='index.js', data-highlight='56-59')
    :markdown
      After login, make `POST` request to RingCentral platform fax endpoint `/account/~/extension/~/fax` along with `formData` to send the fax.